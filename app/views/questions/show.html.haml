%h1.question_title
  =@question.title
%h4.question_author
  =@question.user.username
%p.question_content
  =@question.content

/ =button_to "Upvote", {controller:"vote", action:"create"}, {votable_id: @question.id, votable_type: "Question", vote_value: 1}

/ =button_to "Upvote", question_votes_path(votable_id: @question.id, votable_type: "Question", vote_value: 1)

/ -vote = Vote.where("user_id = ? and votable_id = ? and votable_type = ?", current_user.id, @question.id, "Question")
-if @question_vote
  -vote_class = 'downvoted' if @question_vote.value == -1
  -vote_class = 'upvoted' if @question_vote.value == 1
-else
  -vote_class = 'notvoted'
  
#question_votes{:class => "#{vote_class}"}
  .vote_count=@question.votes.sum(:value)
  =link_to image_tag('upvote_unselected.png'), question_votes_path(@question, vote_value: 1), remote:true, method: "post", class: "empty-state u-create"
  =link_to image_tag('upvote_unselected.png'), question_vote_path(@question, vote_value: 1), remote:true, method: "put", class: "downvote-state u-update"
  =link_to image_tag('upvote_selected.png'), question_vote_path(@question), remote:true, method: "delete", class: "upvote-state u-delete"

  =link_to image_tag('downvote_unselected.png'), question_votes_path(@question, vote_value: -1), remote:true, method: "post", class: "empty-state d-create"
  =link_to image_tag('downvote_unselected.png'), question_vote_path(@question, vote_value: -1), remote:true, method: "put", class: "upvote-state d-update"
  =link_to image_tag('downvote_selected.png'), question_vote_path(@question), remote:true, method: "delete", class: "downvote-state d-delete"

= render partial: "answers/form", locals: { question: @question, answer: @answer }

- Answer.where(question_id: @question.id).each do |answer|
  %p
    / =form_tag question_votes_path(@answer), method: "post" do
    /   =hidden_field_tag(:votable_type, "Answer")
    /   =hidden_field_tag(:vote_value, 1)
    /   =submit_tag("Upvote")
    = answer.content
    %h6= User.find(answer.user_id).username
    -vote = Vote.where("user_id = ? and votable_id = ? and votable_type = ?", current_user.id, answer.id, "Answer")
    -if vote.any?

      -vote_class = 'downvoted' if vote.first.value == -1
      -vote_class = 'upvoted' if vote.first.value == 1
    -else
      -vote_class = 'notvoted'
    %div{:class => "answer_votes #{vote_class}"}
      .vote_count=answer.votes.sum(:value)
      =link_to image_tag('upvote_unselected.png'), answer_votes_path(answer, vote_value: 1), remote:true, method: "post", class: "empty-state u-create"
      =link_to image_tag('upvote_unselected.png'), answer_vote_path(answer, vote_value: 1), remote:true, method: "put", class: "downvote-state u-update"
      =link_to image_tag('upvote_selected.png'), answer_vote_path(answer), remote:true, method: "delete", class: "upvote-state u-delete"

      =link_to image_tag('downvote_unselected.png'), answer_votes_path(answer, vote_value: -1), remote:true, method: "post", class: "empty-state d-create"
      =link_to image_tag('downvote_unselected.png'), answer_vote_path(answer, vote_value: -1), remote:true, method: "put", class: "upvote-state d-update"
      =link_to image_tag('downvote_selected.png'), answer_vote_path(answer), remote:true, method: "delete", class: "downvote-state d-delete"



